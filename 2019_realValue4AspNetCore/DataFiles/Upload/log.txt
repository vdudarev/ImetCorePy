BEGIN =================================================================
0. timeout == 0
1. Читаем данные из файла learn_bin_A3BHal6_inf-2.xls для обучения
1b. Читаем данные из файла exam_bin_A3BHal6_inf-2.xls для прогнозирования
2. Чтение выполнено за 0.78 сек. Обучаемся на объектах: 444 с 255 атрибутами. Прогнозируем объектов: 444
3. Отмасштабированы признаки и подготовлены выборки (обучение+прогнозирование) за 0.60 сек.
   16:45:01 Start evaluateRegressor(timeout=0) LinearRegression...
LinearRegression (r2score=0.963, time=0.24) CrossValid(explained_variance): mean: -23733439122577645568.00 (std() * 2: +/- 79332025923976495104.00); CrossValid(neg_mean_absolute_error): mean: -259776995942.12 (std() * 2: +/- 738895231580.77); CrossValid(neg_mean_squared_error): mean: -1047826651986131909869568.00 (std() * 2: +/- 3595874317053370503790592.00)
   16:45:01 Start evaluateRegressor(timeout=0) Ridge...
Ridge (r2score=0.939, time=0.07) CrossValid(explained_variance): mean: 0.66 (std() * 2: +/- 0.14); CrossValid(neg_mean_absolute_error): mean: -76.20 (std() * 2: +/- 21.23); CrossValid(neg_mean_squared_error): mean: -11927.01 (std() * 2: +/- 6793.12)
   16:45:01 Start evaluateRegressor(timeout=0) Lasso...
Lasso (r2score=0.874, time=0.99) CrossValid(explained_variance): mean: 0.65 (std() * 2: +/- 0.14); CrossValid(neg_mean_absolute_error): mean: -79.50 (std() * 2: +/- 27.36); CrossValid(neg_mean_squared_error): mean: -12480.92 (std() * 2: +/- 7514.51)
4. Файл с результатами оценки алгоритмов сохранен: resultScore.xls
BEGIN =================================================================
The scikit-learn version is 0.23.2.
0. timeout == 0
1. Читаем данные из файла TrainingSet.xls для обучения
1b. Читаем данные из файла Prediction.xls для прогнозирования
2. Чтение выполнено за 0.79 сек. Обучаемся на объектах: 28 с 109 атрибутами. Прогнозируем объектов: 46
3. Отмасштабированы признаки и подготовлены выборки (обучение+прогнозирование) за 0.02 сек.
   15:48:08 Start evaluateRegressor(timeout=0) LinearRegression...
LinearRegression (r2score=0.995, time=0.15) CrossValid(explained_variance): mean: -2248226967660493004603392.00 (std() * 2: +/- 8992907870641972018413568.00); CrossValid(neg_mean_absolute_error): mean: -188494777663.16 (std() * 2: +/- 753979110652.59); CrossValid(neg_mean_squared_error): mean: -270228586350008592236544.00 (std() * 2: +/- 1080914345400034234728448.00)
   15:48:08 Start evaluateRegressor(timeout=0) + PassiveAggressiveRegressor...
+ PassiveAggressiveRegressor (r2score=0.912, time=0.07) CrossValid(explained_variance): mean: -362.30 (std() * 2: +/- 1451.88); CrossValid(neg_mean_absolute_error): mean: -2.55 (std() * 2: +/- 9.68); CrossValid(neg_mean_squared_error): mean: -44.86 (std() * 2: +/- 179.37)
   15:48:09 Start evaluateRegressor(timeout=0) + RANSACRegressor...
ERROR: + RANSACRegressor `min_samples` may not be larger than number of samples: n_samples = 28. Traceback (most recent call last):
  File "D:\WWW\IMET\IMETCorePy\2019_realValue4AspNetCore\regressor.py", line 210, in evaluateRegressor
    evaluateRegressor_FitScore(classifier, X_train, y_train)
  File "D:\WWW\IMET\IMETCorePy\2019_realValue4AspNetCore\regressor.py", line 184, in evaluateRegressor_FitScore
    classifier.fit(X_train, y_train)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_ransac.py", line 281, in fit
    raise ValueError("`min_samples` may not be larger than number "
ValueError: `min_samples` may not be larger than number of samples: n_samples = 28.

4. Файл с результатами оценки алгоритмов сохранен: resultScore.xls
5. Файл с результатами сохранен: result.xls
END =================================================================
BEGIN =================================================================
The scikit-learn version is 0.23.2.
0. timeout == 0
1. Читаем данные из файла TrainingSet.xls для обучения
1b. Читаем данные из файла Prediction.xls для прогнозирования
2. Чтение выполнено за 0.72 сек. Обучаемся на объектах: 28 с 109 атрибутами. Прогнозируем объектов: 46
3. Отмасштабированы признаки и подготовлены выборки (обучение+прогнозирование) за 0.02 сек.
   15:58:25 Start evaluateRegressor(timeout=0) LinearRegression...
LinearRegression (r2score=0.995, time=0.05) CrossValid(explained_variance): mean: -2248226967660493004603392.00 (std() * 2: +/- 8992907870641972018413568.00); CrossValid(neg_mean_absolute_error): mean: -188494777663.16 (std() * 2: +/- 753979110652.59); CrossValid(neg_mean_squared_error): mean: -270228586350008592236544.00 (std() * 2: +/- 1080914345400034234728448.00)
   15:58:25 Start evaluateRegressor(timeout=0) + PassiveAggressiveRegressor...
+ PassiveAggressiveRegressor (r2score=0.912, time=0.06) CrossValid(explained_variance): mean: -362.30 (std() * 2: +/- 1451.88); CrossValid(neg_mean_absolute_error): mean: -2.55 (std() * 2: +/- 9.68); CrossValid(neg_mean_squared_error): mean: -44.86 (std() * 2: +/- 179.37)
   15:58:25 Start evaluateRegressor(timeout=0) + RANSACRegressor...
ERROR: + RANSACRegressor `min_samples` may not be larger than number of samples: n_samples = 28. Traceback (most recent call last):
  File "D:\WWW\IMET\IMETCorePy\2019_realValue4AspNetCore\regressor.py", line 210, in evaluateRegressor
    evaluateRegressor_FitScore(classifier, X_train, y_train)
  File "D:\WWW\IMET\IMETCorePy\2019_realValue4AspNetCore\regressor.py", line 184, in evaluateRegressor_FitScore
    classifier.fit(X_train, y_train)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_ransac.py", line 281, in fit
    raise ValueError("`min_samples` may not be larger than number "
ValueError: `min_samples` may not be larger than number of samples: n_samples = 28.

4. Файл с результатами оценки алгоритмов сохранен: resultScore.xls
5. Файл с результатами сохранен: result.xls
END =================================================================
BEGIN =================================================================
The scikit-learn version is 0.23.2.
0. timeout == 0
1. Читаем данные из файла TrainingSet.xls для обучения
1b. Читаем данные из файла Prediction.xls для прогнозирования
2. Чтение выполнено за 0.72 сек. Обучаемся на объектах: 28 с 109 атрибутами. Прогнозируем объектов: 46
3. Отмасштабированы признаки и подготовлены выборки (обучение+прогнозирование) за 0.02 сек.
   15:58:59 Start evaluateRegressor(timeout=0) LinearRegression...
LinearRegression (r2score=0.995, time=0.04) CrossValid(explained_variance): mean: -2248226967660493004603392.00 (std() * 2: +/- 8992907870641972018413568.00); CrossValid(neg_mean_absolute_error): mean: -188494777663.16 (std() * 2: +/- 753979110652.59); CrossValid(neg_mean_squared_error): mean: -270228586350008592236544.00 (std() * 2: +/- 1080914345400034234728448.00)
   15:58:59 Start evaluateRegressor(timeout=0) + PassiveAggressiveRegressor...
+ PassiveAggressiveRegressor (r2score=0.912, time=0.05) CrossValid(explained_variance): mean: -362.30 (std() * 2: +/- 1451.88); CrossValid(neg_mean_absolute_error): mean: -2.55 (std() * 2: +/- 9.68); CrossValid(neg_mean_squared_error): mean: -44.86 (std() * 2: +/- 179.37)
4. Файл с результатами оценки алгоритмов сохранен: resultScore.xls
5. Файл с результатами сохранен: result.xls
END =================================================================
BEGIN =================================================================
The scikit-learn version is 0.23.2.
0. timeout == 0
1. Читаем данные из файла TrainingSet.xls для обучения
1b. Читаем данные из файла Prediction.xls для прогнозирования
2. Чтение выполнено за 0.70 сек. Обучаемся на объектах: 28 с 109 атрибутами. Прогнозируем объектов: 46
3. Отмасштабированы признаки и подготовлены выборки (обучение+прогнозирование) за 0.02 сек.
   16:33:50 Start evaluateRegressor(timeout=0) LinearRegression...
LinearRegression (r2score=0.995, time=0.22) CrossValid(explained_variance): mean: -2248226967660493004603392.00 (std() * 2: +/- 8992907870641972018413568.00); CrossValid(neg_mean_absolute_error): mean: -188494777663.16 (std() * 2: +/- 753979110652.59); CrossValid(neg_mean_squared_error): mean: -270228586350008592236544.00 (std() * 2: +/- 1080914345400034234728448.00)
   16:33:50 Start evaluateRegressor(timeout=0) + PassiveAggressiveRegressor...
+ PassiveAggressiveRegressor (r2score=0.912, time=0.23) CrossValid(explained_variance): mean: -362.30 (std() * 2: +/- 1451.88); CrossValid(neg_mean_absolute_error): mean: -2.55 (std() * 2: +/- 9.68); CrossValid(neg_mean_squared_error): mean: -44.86 (std() * 2: +/- 179.37)
4. Файл с результатами оценки алгоритмов сохранен: resultScore.xls
5. Файл с результатами сохранен: result.xls
END =================================================================
BEGIN =================================================================
The scikit-learn version is 0.23.2.
0. timeout == 0
1. Читаем данные из файла TrainingSet.xls для обучения
1b. Читаем данные из файла Prediction.xls для прогнозирования
2. Чтение выполнено за 0.78 сек. Обучаемся на объектах: 28 с 109 атрибутами. Прогнозируем объектов: 46
3. Отмасштабированы признаки и подготовлены выборки (обучение+прогнозирование) за 0.05 сек.
   16:41:41 Start evaluateRegressor(timeout=0) LinearRegression...
LinearRegression (r2score=0.995, time=0.23) CrossValid(explained_variance): mean: -2248226967660493004603392.00 (std() * 2: +/- 8992907870641972018413568.00); CrossValid(neg_mean_absolute_error): mean: -188494777663.16 (std() * 2: +/- 753979110652.59); CrossValid(neg_mean_squared_error): mean: -270228586350008592236544.00 (std() * 2: +/- 1080914345400034234728448.00) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -4720808635.94 (std() * 2: +/- 49060082461.38); LooCV(neg_mean_squared_error): mean: -624008956956483649536.00 (std() * 2: +/- 6484891306960140369920.00)
   16:41:41 Start evaluateRegressor(timeout=0) + PassiveAggressiveRegressor...
+ PassiveAggressiveRegressor (r2score=0.912, time=0.26) CrossValid(explained_variance): mean: -362.30 (std() * 2: +/- 1451.88); CrossValid(neg_mean_absolute_error): mean: -2.55 (std() * 2: +/- 9.68); CrossValid(neg_mean_squared_error): mean: -44.86 (std() * 2: +/- 179.37) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.31 (std() * 2: +/- 2.13); LooCV(neg_mean_squared_error): mean: -1.23 (std() * 2: +/- 12.61)
4. Файл с результатами оценки алгоритмов сохранен: resultScore.xls
5. Файл с результатами сохранен: result.xls
END =================================================================
BEGIN =================================================================
The scikit-learn version is 0.23.2.
0. timeout == 0
1. Читаем данные из файла TrainingSet.xls для обучения
1b. Читаем данные из файла Prediction.xls для прогнозирования
2. Чтение выполнено за 0.76 сек. Обучаемся на объектах: 28 с 109 атрибутами. Прогнозируем объектов: 46
3. Отмасштабированы признаки и подготовлены выборки (обучение+прогнозирование) за 0.02 сек.
   16:43:52 Start evaluateRegressor(timeout=0) LinearRegression...
LinearRegression (r2score=0.995, time=0.21) CrossValid(explained_variance): mean: -2248226967660493004603392.00 (std() * 2: +/- 8992907870641972018413568.00); CrossValid(neg_mean_absolute_error): mean: -188494777663.16 (std() * 2: +/- 753979110652.59); CrossValid(neg_mean_squared_error): mean: -270228586350008592236544.00 (std() * 2: +/- 1080914345400034234728448.00) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -4720808635.94 (std() * 2: +/- 49060082461.38); LooCV(neg_mean_squared_error): mean: -624008956956483649536.00 (std() * 2: +/- 6484891306960140369920.00)
   16:43:52 Start evaluateRegressor(timeout=0) + PassiveAggressiveRegressor...
+ PassiveAggressiveRegressor (r2score=0.912, time=0.21) CrossValid(explained_variance): mean: -362.30 (std() * 2: +/- 1451.88); CrossValid(neg_mean_absolute_error): mean: -2.55 (std() * 2: +/- 9.68); CrossValid(neg_mean_squared_error): mean: -44.86 (std() * 2: +/- 179.37) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.31 (std() * 2: +/- 2.13); LooCV(neg_mean_squared_error): mean: -1.23 (std() * 2: +/- 12.61)
4. Файл с результатами оценки алгоритмов сохранен: resultScore.xls
5. Файл с результатами сохранен: result.xls
END =================================================================
BEGIN =================================================================
The scikit-learn version is 0.23.2.
0. timeout == 0
1. Читаем данные из файла TrainingSet.xls для обучения
1b. Читаем данные из файла Prediction.xls для прогнозирования
2. Чтение выполнено за 1.16 сек. Обучаемся на объектах: 28 с 109 атрибутами. Прогнозируем объектов: 46
3. Отмасштабированы признаки и подготовлены выборки (обучение+прогнозирование) за 0.05 сек.
   04:00:46 Start evaluateRegressor(timeout=0) LinearRegression...
BEGIN =================================================================
The scikit-learn version is 0.23.2.
0. timeout == 0
1. Читаем данные из файла TrainingSet.xls для обучения
1b. Читаем данные из файла Prediction.xls для прогнозирования
2. Чтение выполнено за 0.73 сек. Обучаемся на объектах: 28 с 109 атрибутами. Прогнозируем объектов: 46
3. Отмасштабированы признаки и подготовлены выборки (обучение+прогнозирование) за 0.02 сек.
   04:03:16 Start evaluateRegressor(timeout=0) LinearRegression...
LinearRegression (r2score=0.995, r2scoreLoo=-9847576399842780381184.000, time=0.27) CrossValid(explained_variance): mean: -2248226967660493004603392.00 (std() * 2: +/- 8992907870641972018413568.00); CrossValid(neg_mean_absolute_error): mean: -188494777663.16 (std() * 2: +/- 753979110652.59); CrossValid(neg_mean_squared_error): mean: -270228586350008592236544.00 (std() * 2: +/- 1080914345400034234728448.00) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -4720808635.94 (std() * 2: +/- 49060082461.38); LooCV(neg_mean_squared_error): mean: -624008956956483649536.00 (std() * 2: +/- 6484891306960140369920.00)
   04:03:16 Start evaluateRegressor(timeout=0) + PassiveAggressiveRegressor...
+ PassiveAggressiveRegressor (r2score=0.912, r2scoreLoo=-18.346, time=0.28) CrossValid(explained_variance): mean: -362.30 (std() * 2: +/- 1451.88); CrossValid(neg_mean_absolute_error): mean: -2.55 (std() * 2: +/- 9.68); CrossValid(neg_mean_squared_error): mean: -44.86 (std() * 2: +/- 179.37) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.31 (std() * 2: +/- 2.13); LooCV(neg_mean_squared_error): mean: -1.23 (std() * 2: +/- 12.61)
BEGIN =================================================================
The scikit-learn version is 0.23.2.
0. timeout == 0
1. Читаем данные из файла TrainingSet.xls для обучения
1b. Читаем данные из файла Prediction.xls для прогнозирования
2. Чтение выполнено за 0.73 сек. Обучаемся на объектах: 28 с 109 атрибутами. Прогнозируем объектов: 46
3. Отмасштабированы признаки и подготовлены выборки (обучение+прогнозирование) за 0.03 сек.
   04:11:02 Start evaluateRegressor(timeout=0) LinearRegression...
LinearRegression (r2score=0.995, r2scoreLoo=-9847576399842780381184.000, time=0.27) CrossValid(explained_variance): mean: -2248226967660493004603392.00 (std() * 2: +/- 8992907870641972018413568.00); CrossValid(neg_mean_absolute_error): mean: -188494777663.16 (std() * 2: +/- 753979110652.59); CrossValid(neg_mean_squared_error): mean: -270228586350008592236544.00 (std() * 2: +/- 1080914345400034234728448.00) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -4720808635.94 (std() * 2: +/- 49060082461.38); LooCV(neg_mean_squared_error): mean: -624008956956483649536.00 (std() * 2: +/- 6484891306960140369920.00)
   04:11:02 Start evaluateRegressor(timeout=0) + PassiveAggressiveRegressor...
+ PassiveAggressiveRegressor (r2score=0.912, r2scoreLoo=-18.346, time=0.26) CrossValid(explained_variance): mean: -362.30 (std() * 2: +/- 1451.88); CrossValid(neg_mean_absolute_error): mean: -2.55 (std() * 2: +/- 9.68); CrossValid(neg_mean_squared_error): mean: -44.86 (std() * 2: +/- 179.37) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.31 (std() * 2: +/- 2.13); LooCV(neg_mean_squared_error): mean: -1.23 (std() * 2: +/- 12.61)
4. Файл с результатами оценки алгоритмов сохранен: resultScore.xls
5. Файл с результатами сохранен: result.xls
END =================================================================
BEGIN =================================================================
The scikit-learn version is 0.23.2.
0. timeout == 0
1. Читаем данные из файла TrainingSet.xls для обучения
1b. Читаем данные из файла Prediction.xls для прогнозирования
2. Чтение выполнено за 0.85 сек. Обучаемся на объектах: 28 с 109 атрибутами. Прогнозируем объектов: 46
3. Отмасштабированы признаки и подготовлены выборки (обучение+прогнозирование) за 0.02 сек.
   04:13:08 Start evaluateRegressor(timeout=0) LinearRegression...
LinearRegression (r2score=0.995, r2scoreLoo=-9847576399842780381184.000, time=0.32) CrossValid(explained_variance): mean: -2248226967660493004603392.00 (std() * 2: +/- 8992907870641972018413568.00); CrossValid(neg_mean_absolute_error): mean: -188494777663.16 (std() * 2: +/- 753979110652.59); CrossValid(neg_mean_squared_error): mean: -270228586350008592236544.00 (std() * 2: +/- 1080914345400034234728448.00) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -4720808635.94 (std() * 2: +/- 49060082461.38); LooCV(neg_mean_squared_error): mean: -624008956956483649536.00 (std() * 2: +/- 6484891306960140369920.00)
   04:13:08 Start evaluateRegressor(timeout=0) + PassiveAggressiveRegressor...
+ PassiveAggressiveRegressor (r2score=0.912, r2scoreLoo=-18.346, time=0.28) CrossValid(explained_variance): mean: -362.30 (std() * 2: +/- 1451.88); CrossValid(neg_mean_absolute_error): mean: -2.55 (std() * 2: +/- 9.68); CrossValid(neg_mean_squared_error): mean: -44.86 (std() * 2: +/- 179.37) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.31 (std() * 2: +/- 2.13); LooCV(neg_mean_squared_error): mean: -1.23 (std() * 2: +/- 12.61)
4. Файл с результатами оценки алгоритмов сохранен: resultScore.xls
5. Файл с результатами сохранен: result.xls
END =================================================================
BEGIN =================================================================
The scikit-learn version is 0.23.2.
0. timeout == 0
1. Читаем данные из файла TrainingSet.xls для обучения
1b. Читаем данные из файла Prediction.xls для прогнозирования
2. Чтение выполнено за 0.77 сек. Обучаемся на объектах: 28 с 109 атрибутами. Прогнозируем объектов: 46
3. Отмасштабированы признаки и подготовлены выборки (обучение+прогнозирование) за 0.02 сек.
   04:19:52 Start evaluateRegressor(timeout=0) LinearRegression...
LinearRegression (r2score=0.995, r2scoreLoo=-9847576399842780381184.000, time=0.27) CrossValid(explained_variance): mean: -2248226967660493004603392.00 (std() * 2: +/- 8992907870641972018413568.00); CrossValid(neg_mean_absolute_error): mean: -188494777663.16 (std() * 2: +/- 753979110652.59); CrossValid(neg_mean_squared_error): mean: -270228586350008592236544.00 (std() * 2: +/- 1080914345400034234728448.00) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -4720808635.94 (std() * 2: +/- 49060082461.38); LooCV(neg_mean_squared_error): mean: -624008956956483649536.00 (std() * 2: +/- 6484891306960140369920.00)
   04:19:52 Start evaluateRegressor(timeout=0) + PassiveAggressiveRegressor...
+ PassiveAggressiveRegressor (r2score=0.912, r2scoreLoo=-18.346, time=0.27) CrossValid(explained_variance): mean: -362.30 (std() * 2: +/- 1451.88); CrossValid(neg_mean_absolute_error): mean: -2.55 (std() * 2: +/- 9.68); CrossValid(neg_mean_squared_error): mean: -44.86 (std() * 2: +/- 179.37) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.31 (std() * 2: +/- 2.13); LooCV(neg_mean_squared_error): mean: -1.23 (std() * 2: +/- 12.61)
4. Файл с результатами оценки алгоритмов сохранен: resultScore.xls
5. Файл с результатами сохранен: result.xls
END =================================================================
BEGIN =================================================================
The scikit-learn version is 0.23.2.
0. timeout == 0
1. Читаем данные из файла TrainingSet.xls для обучения
1b. Читаем данные из файла Prediction.xls для прогнозирования
2. Чтение выполнено за 0.72 сек. Обучаемся на объектах: 28 с 109 атрибутами. Прогнозируем объектов: 46
3. Отмасштабированы признаки и подготовлены выборки (обучение+прогнозирование) за 0.02 сек.
   04:43:31 Start evaluateRegressor(timeout=0) LinearRegression...
BEGIN =================================================================
The scikit-learn version is 0.23.2.
0. timeout == 0
1. Читаем данные из файла TrainingSet.xls для обучения
1b. Читаем данные из файла Prediction.xls для прогнозирования
2. Чтение выполнено за 0.88 сек. Обучаемся на объектах: 28 с 109 атрибутами. Прогнозируем объектов: 46
3. Отмасштабированы признаки и подготовлены выборки (обучение+прогнозирование) за 0.02 сек.
   04:44:49 Start evaluateRegressor(timeout=0) LinearRegression...
ERROR: LinearRegression name 'r2_score' is not defined Traceback (most recent call last):
  File "D:\WWW\IMET\IMETCorePy\2019_realValue4AspNetCore\regressor.py", line 249, in evaluateRegressor
    result, coef, r2Loo, meanLoo, stdLoo = leave_one_out_predict(X_train, y_train, classifier)
  File "D:\WWW\IMET\IMETCorePy\2019_realValue4AspNetCore\regressor.py", line 313, in leave_one_out_predict
    r2Loo = r2_score(sample_y, result)
NameError: name 'r2_score' is not defined

   04:44:49 Start evaluateRegressor(timeout=0) + PassiveAggressiveRegressor...
ERROR: + PassiveAggressiveRegressor name 'r2_score' is not defined Traceback (most recent call last):
  File "D:\WWW\IMET\IMETCorePy\2019_realValue4AspNetCore\regressor.py", line 249, in evaluateRegressor
    result, coef, r2Loo, meanLoo, stdLoo = leave_one_out_predict(X_train, y_train, classifier)
  File "D:\WWW\IMET\IMETCorePy\2019_realValue4AspNetCore\regressor.py", line 313, in leave_one_out_predict
    r2Loo = r2_score(sample_y, result)
NameError: name 'r2_score' is not defined

4. Файл с результатами оценки алгоритмов сохранен: resultScore.xls
5. Файл с результатами сохранен: result.xls
END =================================================================
BEGIN =================================================================
The scikit-learn version is 0.23.2.
0. timeout == 0
1. Читаем данные из файла TrainingSet.xls для обучения
1b. Читаем данные из файла Prediction.xls для прогнозирования
2. Чтение выполнено за 0.79 сек. Обучаемся на объектах: 28 с 109 атрибутами. Прогнозируем объектов: 46
3. Отмасштабированы признаки и подготовлены выборки (обучение+прогнозирование) за 0.02 сек.
   04:45:28 Start evaluateRegressor(timeout=0) LinearRegression...
LinearRegression (r2score=0.995, r2scoreLoo=-9847576399842780381184.000, time=0.24) CrossValid(explained_variance): mean: -2248226967660493004603392.00 (std() * 2: +/- 8992907870641972018413568.00); CrossValid(neg_mean_absolute_error): mean: -188494777663.16 (std() * 2: +/- 753979110652.59); CrossValid(neg_mean_squared_error): mean: -270228586350008592236544.00 (std() * 2: +/- 1080914345400034234728448.00) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -4720808635.94 (std() * 2: +/- 49060082461.38); LooCV(neg_mean_squared_error): mean: -624008956956483649536.00 (std() * 2: +/- 6484891306960140369920.00)
   04:45:28 Start evaluateRegressor(timeout=0) + PassiveAggressiveRegressor...
+ PassiveAggressiveRegressor (r2score=0.912, r2scoreLoo=-18.346, time=0.25) CrossValid(explained_variance): mean: -362.30 (std() * 2: +/- 1451.88); CrossValid(neg_mean_absolute_error): mean: -2.55 (std() * 2: +/- 9.68); CrossValid(neg_mean_squared_error): mean: -44.86 (std() * 2: +/- 179.37) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.31 (std() * 2: +/- 2.13); LooCV(neg_mean_squared_error): mean: -1.23 (std() * 2: +/- 12.61)
4. Файл с результатами оценки алгоритмов сохранен: resultScore.xls
5. Файл с результатами сохранен: result.xls
END =================================================================
BEGIN =================================================================
The scikit-learn version is 0.23.2.
0. timeout == 0
1. Читаем данные из файла TrainingSet.xls для обучения
1b. Читаем данные из файла Prediction.xls для прогнозирования
2. Чтение выполнено за 1.32 сек. Обучаемся на объектах: 28 с 109 атрибутами. Прогнозируем объектов: 46
3. Отмасштабированы признаки и подготовлены выборки (обучение+прогнозирование) за 0.06 сек.
   17:28:57 Start evaluateRegressor(timeout=0) LinearRegression...
LinearRegression (r2score=0.995, r2scoreLoo=-9847576399842780381184.000, time=0.37) CrossValid(explained_variance): mean: -2248226967660493004603392.00 (std() * 2: +/- 8992907870641972018413568.00); CrossValid(neg_mean_absolute_error): mean: -188494777663.16 (std() * 2: +/- 753979110652.59); CrossValid(neg_mean_squared_error): mean: -270228586350008592236544.00 (std() * 2: +/- 1080914345400034234728448.00) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -4720808635.94 (std() * 2: +/- 49060082461.38); LooCV(neg_mean_squared_error): mean: -624008956956483649536.00 (std() * 2: +/- 6484891306960140369920.00)
   17:28:57 Start evaluateRegressor(timeout=0) Ridge...
Ridge (r2score=0.997, r2scoreLoo=0.986, time=0.26) CrossValid(explained_variance): mean: 0.96 (std() * 2: +/- 0.06); CrossValid(neg_mean_absolute_error): mean: -0.03 (std() * 2: +/- 0.05); CrossValid(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.01) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.02 (std() * 2: +/- 0.04); LooCV(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.00)
   17:28:58 Start evaluateRegressor(timeout=0) Lasso...
Lasso (r2score=0.000, r2scoreLoo=-0.075, time=0.26) CrossValid(explained_variance): mean: -0.00 (std() * 2: +/- 0.00); CrossValid(neg_mean_absolute_error): mean: -0.23 (std() * 2: +/- 0.25); CrossValid(neg_mean_squared_error): mean: -0.09 (std() * 2: +/- 0.16) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.20 (std() * 2: +/- 0.34); LooCV(neg_mean_squared_error): mean: -0.07 (std() * 2: +/- 0.24)
   17:28:58 Start evaluateRegressor(timeout=0) ElasticNet...
ElasticNet (r2score=0.000, r2scoreLoo=-0.075, time=0.21) CrossValid(explained_variance): mean: -0.00 (std() * 2: +/- 0.00); CrossValid(neg_mean_absolute_error): mean: -0.23 (std() * 2: +/- 0.25); CrossValid(neg_mean_squared_error): mean: -0.09 (std() * 2: +/- 0.16) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.20 (std() * 2: +/- 0.34); LooCV(neg_mean_squared_error): mean: -0.07 (std() * 2: +/- 0.24)
   17:28:58 Start evaluateRegressor(timeout=0) + Lars...
BEGIN =================================================================
The scikit-learn version is 0.23.2.
0. timeout == 0
1. Читаем данные из файла TrainingSet.xls для обучения
1b. Читаем данные из файла Prediction.xls для прогнозирования
2. Чтение выполнено за 0.87 сек. Обучаемся на объектах: 28 с 109 атрибутами. Прогнозируем объектов: 46
3. Отмасштабированы признаки и подготовлены выборки (обучение+прогнозирование) за 0.03 сек.
   17:49:10 Start evaluateRegressor(timeout=0) LinearRegression...
LinearRegression (r2score=0.995, r2scoreLoo=-9847576399842780381184.000, time=0.27) CrossValid(explained_variance): mean: -2248226967660493004603392.00 (std() * 2: +/- 8992907870641972018413568.00); CrossValid(neg_mean_absolute_error): mean: -188494777663.16 (std() * 2: +/- 753979110652.59); CrossValid(neg_mean_squared_error): mean: -270228586350008592236544.00 (std() * 2: +/- 1080914345400034234728448.00) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -4720808635.94 (std() * 2: +/- 49060082461.38); LooCV(neg_mean_squared_error): mean: -624008956956483649536.00 (std() * 2: +/- 6484891306960140369920.00)
   17:49:10 Start evaluateRegressor(timeout=0) Ridge...
Ridge (r2score=0.997, r2scoreLoo=0.986, time=0.27) CrossValid(explained_variance): mean: 0.96 (std() * 2: +/- 0.06); CrossValid(neg_mean_absolute_error): mean: -0.03 (std() * 2: +/- 0.05); CrossValid(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.01) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.02 (std() * 2: +/- 0.04); LooCV(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.00)
   17:49:11 Start evaluateRegressor(timeout=0) Lasso...
Lasso (r2score=0.000, r2scoreLoo=-0.075, time=0.27) CrossValid(explained_variance): mean: -0.00 (std() * 2: +/- 0.00); CrossValid(neg_mean_absolute_error): mean: -0.23 (std() * 2: +/- 0.25); CrossValid(neg_mean_squared_error): mean: -0.09 (std() * 2: +/- 0.16) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.20 (std() * 2: +/- 0.34); LooCV(neg_mean_squared_error): mean: -0.07 (std() * 2: +/- 0.24)
   17:49:11 Start evaluateRegressor(timeout=0) ElasticNet...
ElasticNet (r2score=0.000, r2scoreLoo=-0.075, time=0.23) CrossValid(explained_variance): mean: -0.00 (std() * 2: +/- 0.00); CrossValid(neg_mean_absolute_error): mean: -0.23 (std() * 2: +/- 0.25); CrossValid(neg_mean_squared_error): mean: -0.09 (std() * 2: +/- 0.16) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.20 (std() * 2: +/- 0.34); LooCV(neg_mean_squared_error): mean: -0.07 (std() * 2: +/- 0.24)
   17:49:11 Start evaluateRegressor(timeout=0) + Lars...
+ Lars (r2score=-146789051391421606727291482490934156314216160120575491047424.000, r2scoreLoo=-89895656944588966091110329747400321083217323357071084624320144282420709364832885532446160846848.000, time=6.63) CrossValid(explained_variance): mean: -26369433305923151848007308264839111545701785176786304237568.00 (std() * 2: +/- 105477733223692607392029233059356446182807140707145216950272.00); CrossValid(neg_mean_absolute_error): mean: -11639731219380787858817155072.00 (std() * 2: +/- 46558924877523151435268620288.00); CrossValid(neg_mean_squared_error): mean: -899436239532314028066746474607159791060508476308975517696.00 (std() * 2: +/- 3597744958129256112266985898428639164242033905235902070784.00) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -25538953092130210038464074308414088643971383296.00 (std() * 2: +/- 142044470593610729264562686338236541387409457152.00); LooCV(neg_mean_squared_error): mean: -5696396031596811974305373863078218631396666178459392553283953333343881563186163524654751285248.00 (std() * 2: +/- 38473843495632449506294040026980227307808821088983269102620060769604113296826877047658321543168.00)
   17:49:18 Start evaluateRegressor(timeout=0) LassoLars...
LassoLars (r2score=0.000, r2scoreLoo=-0.075, time=0.20) CrossValid(explained_variance): mean: -0.00 (std() * 2: +/- 0.00); CrossValid(neg_mean_absolute_error): mean: -0.23 (std() * 2: +/- 0.25); CrossValid(neg_mean_squared_error): mean: -0.09 (std() * 2: +/- 0.16) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.20 (std() * 2: +/- 0.34); LooCV(neg_mean_squared_error): mean: -0.07 (std() * 2: +/- 0.24)
   17:49:18 Start evaluateRegressor(timeout=0) OrthogonalMatchingPursuit...
OrthogonalMatchingPursuit (r2score=0.996, r2scoreLoo=0.877, time=0.29) CrossValid(explained_variance): mean: -5.38 (std() * 2: +/- 25.31); CrossValid(neg_mean_absolute_error): mean: -0.34 (std() * 2: +/- 1.28); CrossValid(neg_mean_squared_error): mean: -0.78 (std() * 2: +/- 3.13) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.04 (std() * 2: +/- 0.16); LooCV(neg_mean_squared_error): mean: -0.01 (std() * 2: +/- 0.07)
   17:49:18 Start evaluateRegressor(timeout=0) BayesianRidge...
BayesianRidge (r2score=0.997, r2scoreLoo=0.986, time=0.44) CrossValid(explained_variance): mean: 0.96 (std() * 2: +/- 0.07); CrossValid(neg_mean_absolute_error): mean: -0.03 (std() * 2: +/- 0.05); CrossValid(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.01) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.02 (std() * 2: +/- 0.04); LooCV(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.00)
   17:49:19 Start evaluateRegressor(timeout=0) ARDRegression...
ARDRegression (r2score=0.996, r2scoreLoo=0.988, time=1.64) CrossValid(explained_variance): mean: 0.97 (std() * 2: +/- 0.03); CrossValid(neg_mean_absolute_error): mean: -0.02 (std() * 2: +/- 0.01); CrossValid(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.00) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.02 (std() * 2: +/- 0.03); LooCV(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.00)
   17:49:20 Start evaluateRegressor(timeout=0) + PassiveAggressiveRegressor...
+ PassiveAggressiveRegressor (r2score=0.912, r2scoreLoo=-18.346, time=0.28) CrossValid(explained_variance): mean: -362.30 (std() * 2: +/- 1451.88); CrossValid(neg_mean_absolute_error): mean: -2.55 (std() * 2: +/- 9.68); CrossValid(neg_mean_squared_error): mean: -44.86 (std() * 2: +/- 179.37) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.31 (std() * 2: +/- 2.13); LooCV(neg_mean_squared_error): mean: -1.23 (std() * 2: +/- 12.61)
4. Файл с результатами оценки алгоритмов сохранен: resultScore.xls
5. Файл с результатами сохранен: result.xls
END =================================================================
BEGIN =================================================================
The scikit-learn version is 1.0.2.
0. timeout == 0
1. Читаем данные из файла TrainingSet.xls для обучения
1b. Читаем данные из файла Prediction.xls для прогнозирования
BEGIN =================================================================
The scikit-learn version is 1.0.2.
0. timeout == 0
1. Читаем данные из файла TrainingSet.xls для обучения
1b. Читаем данные из файла Prediction.xls для прогнозирования
2. Чтение выполнено за 0.28 сек. Обучаемся на объектах: 28 с 109 атрибутами. Прогнозируем объектов: 46
3. Отмасштабированы признаки и подготовлены выборки (обучение+прогнозирование) за 0.07 сек.
   22:11:35 Start evaluateRegressor(timeout=0) LinearRegression...
LinearRegression (r2score=0.998, r2scoreLoo=-2458230099954494341120.000, time=0.17) CrossValid(explained_variance): mean: 0.44 (std() * 2: +/- 2.20); CrossValid(neg_mean_absolute_error): mean: -0.11 (std() * 2: +/- 0.38); CrossValid(neg_mean_squared_error): mean: -0.07 (std() * 2: +/- 0.27) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -2358647186.81 (std() * 2: +/- 24511780587.96); LooCV(neg_mean_squared_error): mean: -155770063449939476480.00 (std() * 2: +/- 1618809985161137225728.00)
   22:11:36 Start evaluateRegressor(timeout=0) Ridge...
Ridge (r2score=0.997, r2scoreLoo=0.986, time=0.15) CrossValid(explained_variance): mean: 0.96 (std() * 2: +/- 0.06); CrossValid(neg_mean_absolute_error): mean: -0.03 (std() * 2: +/- 0.05); CrossValid(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.01) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.02 (std() * 2: +/- 0.04); LooCV(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.00)
   22:11:36 Start evaluateRegressor(timeout=0) Lasso...
Lasso (r2score=0.000, r2scoreLoo=-0.075, time=0.18) CrossValid(explained_variance): mean: -0.00 (std() * 2: +/- 0.00); CrossValid(neg_mean_absolute_error): mean: -0.23 (std() * 2: +/- 0.25); CrossValid(neg_mean_squared_error): mean: -0.09 (std() * 2: +/- 0.16) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.20 (std() * 2: +/- 0.34); LooCV(neg_mean_squared_error): mean: -0.07 (std() * 2: +/- 0.24)
   22:11:36 Start evaluateRegressor(timeout=0) ElasticNet...
ElasticNet (r2score=0.000, r2scoreLoo=-0.075, time=0.18) CrossValid(explained_variance): mean: -0.00 (std() * 2: +/- 0.00); CrossValid(neg_mean_absolute_error): mean: -0.23 (std() * 2: +/- 0.25); CrossValid(neg_mean_squared_error): mean: -0.09 (std() * 2: +/- 0.16) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.20 (std() * 2: +/- 0.34); LooCV(neg_mean_squared_error): mean: -0.07 (std() * 2: +/- 0.24)
   22:11:36 Start evaluateRegressor(timeout=0) + Lars...
+ Lars (r2score=-11408830817437405102489860443933803289923302464865421276313793173098052509172710189548376201632613093516212121379012608.000, r2scoreLoo=-420640403678132556413752354314847933569837003966113306513159247467705364857437802967970635191725363921189014077440.000, time=5.72) CrossValid(explained_variance): mean: -1257192092786487308926556319869694817890067337973465612870628930737460996948707820129222656.00 (std() * 2: +/- 5028768371145949235706225279478779271560269351893862451482515722949843987794831280516890624.00); CrossValid(neg_mean_absolute_error): mean: -143900636251035870141469523975673655932747776.00 (std() * 2: +/- 575602545004127476477050214506500727853023232.00); CrossValid(neg_mean_squared_error): mean: -155305448350889230695722664588149262442446802179203636229075589022026912785946866020777984.00 (std() * 2: +/- 621221793403556922782890658352597049769787208716814544916302356088107651143787464083111936.00) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -32757997083056837331907254705617723076349617592621596672.00 (std() * 2: +/- 319884547011940098393364144094382406913337574231143088128.00); LooCV(neg_mean_squared_error): mean: -26654617227152088297555529622241962497260255353753463224876164088365255665135244812272595776905533845449920741376.00 (std() * 2: +/- 275856059256359252647079340602845400834334402570641820025394410496980352380384426038527376822246822379948557205504.00)
   22:11:42 Start evaluateRegressor(timeout=0) LassoLars...
LassoLars (r2score=0.000, r2scoreLoo=-0.075, time=0.35) CrossValid(explained_variance): mean: -0.00 (std() * 2: +/- 0.00); CrossValid(neg_mean_absolute_error): mean: -0.23 (std() * 2: +/- 0.25); CrossValid(neg_mean_squared_error): mean: -0.09 (std() * 2: +/- 0.16) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.20 (std() * 2: +/- 0.34); LooCV(neg_mean_squared_error): mean: -0.07 (std() * 2: +/- 0.24)
   22:11:42 Start evaluateRegressor(timeout=0) OrthogonalMatchingPursuit...
OrthogonalMatchingPursuit (r2score=0.996, r2scoreLoo=0.877, time=0.44) CrossValid(explained_variance): mean: -5.38 (std() * 2: +/- 25.31); CrossValid(neg_mean_absolute_error): mean: -0.34 (std() * 2: +/- 1.28); CrossValid(neg_mean_squared_error): mean: -0.78 (std() * 2: +/- 3.13) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.04 (std() * 2: +/- 0.16); LooCV(neg_mean_squared_error): mean: -0.01 (std() * 2: +/- 0.07)
   22:11:43 Start evaluateRegressor(timeout=0) BayesianRidge...
BayesianRidge (r2score=0.997, r2scoreLoo=0.986, time=0.28) CrossValid(explained_variance): mean: 0.96 (std() * 2: +/- 0.07); CrossValid(neg_mean_absolute_error): mean: -0.03 (std() * 2: +/- 0.05); CrossValid(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.01) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.02 (std() * 2: +/- 0.04); LooCV(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.00)
   22:11:43 Start evaluateRegressor(timeout=0) ARDRegression...
ARDRegression (r2score=0.996, r2scoreLoo=0.988, time=2.06) CrossValid(explained_variance): mean: 0.97 (std() * 2: +/- 0.03); CrossValid(neg_mean_absolute_error): mean: -0.02 (std() * 2: +/- 0.01); CrossValid(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.00) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.02 (std() * 2: +/- 0.03); LooCV(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.00)
   22:11:45 Start evaluateRegressor(timeout=0) + PassiveAggressiveRegressor...
+ PassiveAggressiveRegressor (r2score=0.903, r2scoreLoo=-60.270, time=0.20) CrossValid(explained_variance): mean: -834.85 (std() * 2: +/- 3342.13); CrossValid(neg_mean_absolute_error): mean: -3.80 (std() * 2: +/- 14.71); CrossValid(neg_mean_squared_error): mean: -102.89 (std() * 2: +/- 411.47) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.48 (std() * 2: +/- 3.82); LooCV(neg_mean_squared_error): mean: -3.88 (std() * 2: +/- 40.20)
BEGIN =================================================================
The scikit-learn version is 1.0.2.
0. timeout == 0
1. Читаем данные из файла TrainingSet.xls для обучения
1b. Читаем данные из файла Prediction.xls для прогнозирования
2. Чтение выполнено за 0.18 сек. Обучаемся на объектах: 28 с 109 атрибутами. Прогнозируем объектов: 46
3. Отмасштабированы признаки и подготовлены выборки (обучение+прогнозирование) за 0.02 сек.
   22:13:41 Start evaluateRegressor(timeout=0) LinearRegression...
LinearRegression (r2score=0.998, r2scoreLoo=-2458230099954494341120.000, time=0.15) CrossValid(explained_variance): mean: 0.44 (std() * 2: +/- 2.20); CrossValid(neg_mean_absolute_error): mean: -0.11 (std() * 2: +/- 0.38); CrossValid(neg_mean_squared_error): mean: -0.07 (std() * 2: +/- 0.27) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -2358647186.81 (std() * 2: +/- 24511780587.96); LooCV(neg_mean_squared_error): mean: -155770063449939476480.00 (std() * 2: +/- 1618809985161137225728.00)
   22:13:41 Start evaluateRegressor(timeout=0) Ridge...
Ridge (r2score=0.997, r2scoreLoo=0.986, time=0.15) CrossValid(explained_variance): mean: 0.96 (std() * 2: +/- 0.06); CrossValid(neg_mean_absolute_error): mean: -0.03 (std() * 2: +/- 0.05); CrossValid(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.01) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.02 (std() * 2: +/- 0.04); LooCV(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.00)
   22:13:41 Start evaluateRegressor(timeout=0) Lasso...
Lasso (r2score=0.000, r2scoreLoo=-0.075, time=0.18) CrossValid(explained_variance): mean: -0.00 (std() * 2: +/- 0.00); CrossValid(neg_mean_absolute_error): mean: -0.23 (std() * 2: +/- 0.25); CrossValid(neg_mean_squared_error): mean: -0.09 (std() * 2: +/- 0.16) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.20 (std() * 2: +/- 0.34); LooCV(neg_mean_squared_error): mean: -0.07 (std() * 2: +/- 0.24)
   22:13:42 Start evaluateRegressor(timeout=0) ElasticNet...
ElasticNet (r2score=0.000, r2scoreLoo=-0.075, time=0.18) CrossValid(explained_variance): mean: -0.00 (std() * 2: +/- 0.00); CrossValid(neg_mean_absolute_error): mean: -0.23 (std() * 2: +/- 0.25); CrossValid(neg_mean_squared_error): mean: -0.09 (std() * 2: +/- 0.16) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.20 (std() * 2: +/- 0.34); LooCV(neg_mean_squared_error): mean: -0.07 (std() * 2: +/- 0.24)
   22:13:42 Start evaluateRegressor(timeout=0) + Lars...
+ Lars (r2score=-11408830817437405102489860443933803289923302464865421276313793173098052509172710189548376201632613093516212121379012608.000, r2scoreLoo=-420640403678132556413752354314847933569837003966113306513159247467705364857437802967970635191725363921189014077440.000, time=5.53) CrossValid(explained_variance): mean: -1257192092786487308926556319869694817890067337973465612870628930737460996948707820129222656.00 (std() * 2: +/- 5028768371145949235706225279478779271560269351893862451482515722949843987794831280516890624.00); CrossValid(neg_mean_absolute_error): mean: -143900636251035870141469523975673655932747776.00 (std() * 2: +/- 575602545004127476477050214506500727853023232.00); CrossValid(neg_mean_squared_error): mean: -155305448350889230695722664588149262442446802179203636229075589022026912785946866020777984.00 (std() * 2: +/- 621221793403556922782890658352597049769787208716814544916302356088107651143787464083111936.00) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -32757997083056837331907254705617723076349617592621596672.00 (std() * 2: +/- 319884547011940098393364144094382406913337574231143088128.00); LooCV(neg_mean_squared_error): mean: -26654617227152088297555529622241962497260255353753463224876164088365255665135244812272595776905533845449920741376.00 (std() * 2: +/- 275856059256359252647079340602845400834334402570641820025394410496980352380384426038527376822246822379948557205504.00)
   22:13:47 Start evaluateRegressor(timeout=0) LassoLars...
LassoLars (r2score=0.000, r2scoreLoo=-0.075, time=0.34) CrossValid(explained_variance): mean: -0.00 (std() * 2: +/- 0.00); CrossValid(neg_mean_absolute_error): mean: -0.23 (std() * 2: +/- 0.25); CrossValid(neg_mean_squared_error): mean: -0.09 (std() * 2: +/- 0.16) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.20 (std() * 2: +/- 0.34); LooCV(neg_mean_squared_error): mean: -0.07 (std() * 2: +/- 0.24)
   22:13:48 Start evaluateRegressor(timeout=0) OrthogonalMatchingPursuit...
OrthogonalMatchingPursuit (r2score=0.996, r2scoreLoo=0.877, time=0.43) CrossValid(explained_variance): mean: -5.38 (std() * 2: +/- 25.31); CrossValid(neg_mean_absolute_error): mean: -0.34 (std() * 2: +/- 1.28); CrossValid(neg_mean_squared_error): mean: -0.78 (std() * 2: +/- 3.13) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.04 (std() * 2: +/- 0.16); LooCV(neg_mean_squared_error): mean: -0.01 (std() * 2: +/- 0.07)
   22:13:48 Start evaluateRegressor(timeout=0) BayesianRidge...
BayesianRidge (r2score=0.997, r2scoreLoo=0.986, time=0.27) CrossValid(explained_variance): mean: 0.96 (std() * 2: +/- 0.07); CrossValid(neg_mean_absolute_error): mean: -0.03 (std() * 2: +/- 0.05); CrossValid(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.01) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.02 (std() * 2: +/- 0.04); LooCV(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.00)
   22:13:48 Start evaluateRegressor(timeout=0) ARDRegression...
ARDRegression (r2score=0.996, r2scoreLoo=0.988, time=2.04) CrossValid(explained_variance): mean: 0.97 (std() * 2: +/- 0.03); CrossValid(neg_mean_absolute_error): mean: -0.02 (std() * 2: +/- 0.01); CrossValid(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.00) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.02 (std() * 2: +/- 0.03); LooCV(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.00)
   22:13:50 Start evaluateRegressor(timeout=0) + PassiveAggressiveRegressor...
+ PassiveAggressiveRegressor (r2score=0.903, r2scoreLoo=-60.270, time=0.20) CrossValid(explained_variance): mean: -834.85 (std() * 2: +/- 3342.13); CrossValid(neg_mean_absolute_error): mean: -3.80 (std() * 2: +/- 14.71); CrossValid(neg_mean_squared_error): mean: -102.89 (std() * 2: +/- 411.47) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.48 (std() * 2: +/- 3.82); LooCV(neg_mean_squared_error): mean: -3.88 (std() * 2: +/- 40.20)
4. Файл с результатами оценки алгоритмов сохранен: resultScore.xls
5. Файл с результатами сохранен: result.xls
END =================================================================
BEGIN =================================================================
The scikit-learn version is 0.23.2.
0. timeout == 0
1. Читаем данные из файла TrainingSet.xls для обучения
1b. Читаем данные из файла Prediction.xls для прогнозирования
2. Чтение выполнено за 1.27 сек. Обучаемся на объектах: 28 с 109 атрибутами. Прогнозируем объектов: 46
3. Отмасштабированы признаки и подготовлены выборки (обучение+прогнозирование) за 0.04 сек.
   01:50:06 Start evaluateRegressor(timeout=0) LinearRegression...
LinearRegression (r2score=0.995, r2scoreLoo=-9847576399842780381184.000, time=0.33) CrossValid(explained_variance): mean: -2248226967660493004603392.00 (std() * 2: +/- 8992907870641972018413568.00); CrossValid(neg_mean_absolute_error): mean: -188494777663.16 (std() * 2: +/- 753979110652.59); CrossValid(neg_mean_squared_error): mean: -270228586350008592236544.00 (std() * 2: +/- 1080914345400034234728448.00) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -4720808635.94 (std() * 2: +/- 49060082461.38); LooCV(neg_mean_squared_error): mean: -624008956956483649536.00 (std() * 2: +/- 6484891306960140369920.00)
   01:50:07 Start evaluateRegressor(timeout=0) Ridge...
Ridge (r2score=0.997, r2scoreLoo=0.986, time=0.25) CrossValid(explained_variance): mean: 0.96 (std() * 2: +/- 0.06); CrossValid(neg_mean_absolute_error): mean: -0.03 (std() * 2: +/- 0.05); CrossValid(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.01) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.02 (std() * 2: +/- 0.04); LooCV(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.00)
   01:50:07 Start evaluateRegressor(timeout=0) Lasso...
Lasso (r2score=0.000, r2scoreLoo=-0.075, time=0.16) CrossValid(explained_variance): mean: -0.00 (std() * 2: +/- 0.00); CrossValid(neg_mean_absolute_error): mean: -0.23 (std() * 2: +/- 0.25); CrossValid(neg_mean_squared_error): mean: -0.09 (std() * 2: +/- 0.16) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.20 (std() * 2: +/- 0.34); LooCV(neg_mean_squared_error): mean: -0.07 (std() * 2: +/- 0.24)
   01:50:07 Start evaluateRegressor(timeout=0) ElasticNet...
ElasticNet (r2score=0.000, r2scoreLoo=-0.075, time=0.15) CrossValid(explained_variance): mean: -0.00 (std() * 2: +/- 0.00); CrossValid(neg_mean_absolute_error): mean: -0.23 (std() * 2: +/- 0.25); CrossValid(neg_mean_squared_error): mean: -0.09 (std() * 2: +/- 0.16) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.20 (std() * 2: +/- 0.34); LooCV(neg_mean_squared_error): mean: -0.07 (std() * 2: +/- 0.24)
   01:50:07 Start evaluateRegressor(timeout=0) + Lars...
+ Lars (r2score=-146789051391421606727291482490934156314216160120575491047424.000, r2scoreLoo=-89895656944588966091110329747400321083217323357071084624320144282420709364832885532446160846848.000, time=2.92) CrossValid(explained_variance): mean: -26369433305923151848007308264839111545701785176786304237568.00 (std() * 2: +/- 105477733223692607392029233059356446182807140707145216950272.00); CrossValid(neg_mean_absolute_error): mean: -11639731219380787858817155072.00 (std() * 2: +/- 46558924877523151435268620288.00); CrossValid(neg_mean_squared_error): mean: -899436239532314028066746474607159791060508476308975517696.00 (std() * 2: +/- 3597744958129256112266985898428639164242033905235902070784.00) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -25538953092130210038464074308414088643971383296.00 (std() * 2: +/- 142044470593610729264562686338236541387409457152.00); LooCV(neg_mean_squared_error): mean: -5696396031596811974305373863078218631396666178459392553283953333343881563186163524654751285248.00 (std() * 2: +/- 38473843495632449506294040026980227307808821088983269102620060769604113296826877047658321543168.00)
   01:50:10 Start evaluateRegressor(timeout=0) LassoLars...
LassoLars (r2score=0.000, r2scoreLoo=-0.075, time=0.09) CrossValid(explained_variance): mean: -0.00 (std() * 2: +/- 0.00); CrossValid(neg_mean_absolute_error): mean: -0.23 (std() * 2: +/- 0.25); CrossValid(neg_mean_squared_error): mean: -0.09 (std() * 2: +/- 0.16) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.20 (std() * 2: +/- 0.34); LooCV(neg_mean_squared_error): mean: -0.07 (std() * 2: +/- 0.24)
   01:50:10 Start evaluateRegressor(timeout=0) OrthogonalMatchingPursuit...
OrthogonalMatchingPursuit (r2score=0.996, r2scoreLoo=0.877, time=0.12) CrossValid(explained_variance): mean: -5.38 (std() * 2: +/- 25.31); CrossValid(neg_mean_absolute_error): mean: -0.34 (std() * 2: +/- 1.28); CrossValid(neg_mean_squared_error): mean: -0.78 (std() * 2: +/- 3.13) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.04 (std() * 2: +/- 0.16); LooCV(neg_mean_squared_error): mean: -0.01 (std() * 2: +/- 0.07)
   01:50:10 Start evaluateRegressor(timeout=0) BayesianRidge...
BayesianRidge (r2score=0.997, r2scoreLoo=0.986, time=0.23) CrossValid(explained_variance): mean: 0.96 (std() * 2: +/- 0.07); CrossValid(neg_mean_absolute_error): mean: -0.03 (std() * 2: +/- 0.05); CrossValid(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.01) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.02 (std() * 2: +/- 0.04); LooCV(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.00)
   01:50:11 Start evaluateRegressor(timeout=0) ARDRegression...
BEGIN =================================================================
The scikit-learn version is 0.23.2.
0. timeout == 0
1. Читаем данные из файла TrainingSet.xls для обучения
1b. Читаем данные из файла Prediction.xls для прогнозирования
2. Чтение выполнено за 0.78 сек. Обучаемся на объектах: 28 с 109 атрибутами. Прогнозируем объектов: 46
3. Отмасштабированы признаки и подготовлены выборки (обучение+прогнозирование) за 0.02 сек.
   01:50:37 Start evaluateRegressor(timeout=0) LinearRegression...
LinearRegression (r2score=0.995, r2scoreLoo=-9847576399842780381184.000, time=0.12) CrossValid(explained_variance): mean: -2248226967660493004603392.00 (std() * 2: +/- 8992907870641972018413568.00); CrossValid(neg_mean_absolute_error): mean: -188494777663.16 (std() * 2: +/- 753979110652.59); CrossValid(neg_mean_squared_error): mean: -270228586350008592236544.00 (std() * 2: +/- 1080914345400034234728448.00) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -4720808635.94 (std() * 2: +/- 49060082461.38); LooCV(neg_mean_squared_error): mean: -624008956956483649536.00 (std() * 2: +/- 6484891306960140369920.00)
   01:50:37 Start evaluateRegressor(timeout=0) Ridge...
Ridge (r2score=0.997, r2scoreLoo=0.986, time=0.13) CrossValid(explained_variance): mean: 0.96 (std() * 2: +/- 0.06); CrossValid(neg_mean_absolute_error): mean: -0.03 (std() * 2: +/- 0.05); CrossValid(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.01) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.02 (std() * 2: +/- 0.04); LooCV(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.00)
   01:50:37 Start evaluateRegressor(timeout=0) Lasso...
Lasso (r2score=0.000, r2scoreLoo=-0.075, time=0.13) CrossValid(explained_variance): mean: -0.00 (std() * 2: +/- 0.00); CrossValid(neg_mean_absolute_error): mean: -0.23 (std() * 2: +/- 0.25); CrossValid(neg_mean_squared_error): mean: -0.09 (std() * 2: +/- 0.16) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.20 (std() * 2: +/- 0.34); LooCV(neg_mean_squared_error): mean: -0.07 (std() * 2: +/- 0.24)
   01:50:37 Start evaluateRegressor(timeout=0) ElasticNet...
ElasticNet (r2score=0.000, r2scoreLoo=-0.075, time=0.13) CrossValid(explained_variance): mean: -0.00 (std() * 2: +/- 0.00); CrossValid(neg_mean_absolute_error): mean: -0.23 (std() * 2: +/- 0.25); CrossValid(neg_mean_squared_error): mean: -0.09 (std() * 2: +/- 0.16) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.20 (std() * 2: +/- 0.34); LooCV(neg_mean_squared_error): mean: -0.07 (std() * 2: +/- 0.24)
   01:50:37 Start evaluateRegressor(timeout=0) + Lars...
+ Lars (r2score=-146789051391421606727291482490934156314216160120575491047424.000, r2scoreLoo=-89895656944588966091110329747400321083217323357071084624320144282420709364832885532446160846848.000, time=3.14) CrossValid(explained_variance): mean: -26369433305923151848007308264839111545701785176786304237568.00 (std() * 2: +/- 105477733223692607392029233059356446182807140707145216950272.00); CrossValid(neg_mean_absolute_error): mean: -11639731219380787858817155072.00 (std() * 2: +/- 46558924877523151435268620288.00); CrossValid(neg_mean_squared_error): mean: -899436239532314028066746474607159791060508476308975517696.00 (std() * 2: +/- 3597744958129256112266985898428639164242033905235902070784.00) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -25538953092130210038464074308414088643971383296.00 (std() * 2: +/- 142044470593610729264562686338236541387409457152.00); LooCV(neg_mean_squared_error): mean: -5696396031596811974305373863078218631396666178459392553283953333343881563186163524654751285248.00 (std() * 2: +/- 38473843495632449506294040026980227307808821088983269102620060769604113296826877047658321543168.00)
   01:50:41 Start evaluateRegressor(timeout=0) LassoLars...
LassoLars (r2score=0.000, r2scoreLoo=-0.075, time=0.08) CrossValid(explained_variance): mean: -0.00 (std() * 2: +/- 0.00); CrossValid(neg_mean_absolute_error): mean: -0.23 (std() * 2: +/- 0.25); CrossValid(neg_mean_squared_error): mean: -0.09 (std() * 2: +/- 0.16) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.20 (std() * 2: +/- 0.34); LooCV(neg_mean_squared_error): mean: -0.07 (std() * 2: +/- 0.24)
   01:50:41 Start evaluateRegressor(timeout=0) OrthogonalMatchingPursuit...
OrthogonalMatchingPursuit (r2score=0.996, r2scoreLoo=0.877, time=0.12) CrossValid(explained_variance): mean: -5.38 (std() * 2: +/- 25.31); CrossValid(neg_mean_absolute_error): mean: -0.34 (std() * 2: +/- 1.28); CrossValid(neg_mean_squared_error): mean: -0.78 (std() * 2: +/- 3.13) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.04 (std() * 2: +/- 0.16); LooCV(neg_mean_squared_error): mean: -0.01 (std() * 2: +/- 0.07)
   01:50:41 Start evaluateRegressor(timeout=0) BayesianRidge...
BayesianRidge (r2score=0.997, r2scoreLoo=0.986, time=0.17) CrossValid(explained_variance): mean: 0.96 (std() * 2: +/- 0.07); CrossValid(neg_mean_absolute_error): mean: -0.03 (std() * 2: +/- 0.05); CrossValid(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.01) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.02 (std() * 2: +/- 0.04); LooCV(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.00)
   01:50:41 Start evaluateRegressor(timeout=0) ARDRegression...
ARDRegression (r2score=0.996, r2scoreLoo=0.988, time=0.56) CrossValid(explained_variance): mean: 0.97 (std() * 2: +/- 0.03); CrossValid(neg_mean_absolute_error): mean: -0.02 (std() * 2: +/- 0.01); CrossValid(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.00) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.02 (std() * 2: +/- 0.03); LooCV(neg_mean_squared_error): mean: -0.00 (std() * 2: +/- 0.00)
   01:50:41 Start evaluateRegressor(timeout=0) + PassiveAggressiveRegressor...
+ PassiveAggressiveRegressor (r2score=0.912, r2scoreLoo=-18.346, time=0.13) CrossValid(explained_variance): mean: -362.30 (std() * 2: +/- 1451.88); CrossValid(neg_mean_absolute_error): mean: -2.55 (std() * 2: +/- 9.68); CrossValid(neg_mean_squared_error): mean: -44.86 (std() * 2: +/- 179.37) LooCV(explained_variance): mean: 1.00 (std() * 2: +/- 0.00); LooCV(neg_mean_absolute_error): mean: -0.31 (std() * 2: +/- 2.13); LooCV(neg_mean_squared_error): mean: -1.23 (std() * 2: +/- 12.61)
4. Файл с результатами оценки алгоритмов сохранен: resultScore.xls
5. Файл с результатами сохранен: result.xls
END =================================================================
